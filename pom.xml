<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.cx</groupId>
    <artifactId>checkmarx-bamboo-plugin</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <organization>
        <name>Checkmarx LTD</name>
        <url>http://www.checkmarx.com/</url>
    </organization>
    <name>Checkmarx Bamboo Plugin</name>
    <description>Checkmarx Plugin For Atlassian Bamboo</description>
    <packaging>atlassian-plugin</packaging>
    <build>
        <plugins>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-bamboo-plugin</artifactId>
                <version>${amps.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <productVersion>${bamboo.version}</productVersion>
                  <!--  <productDataVersion>${bamboo.data.version}</productDataVersion>-->
                    <enableQuickReload>true</enableQuickReload>
                    <enableFastdev>false</enableFastdev>
                    <extractDependencies>false</extractDependencies>
                     See here for an explanation of default instructions:
                     https://developer.atlassian.com/docs/advanced-topics/configuration-of-instructions-in-atlassian-plugins
                    <instructions>
                        <Atlassian-Plugin-Key>${atlassian.plugin.key}</Atlassian-Plugin-Key>
                       <Export-Package>javax.ws.rs.*</Export-Package>
                        <Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
                        <Import-Package>
                            org.springframework.osgi.*,com.atlassian.spring.container,com.atlassian.bamboo.bandana,com.atlassian.bamboo.build.logger,
                            com.atlassian.bamboo.collections,com.atlassian.bamboo.task,com.atlassian.bamboo.configuration,
                            com.atlassian.bamboo.utils.error,com.atlassian.bamboo.utils.i18n,com.atlassian.bamboo.v2.build,
                            com.atlassian.bamboo.ww2,com.atlassian.bamboo.ww2.actions.build.admin.config.task,
                            com.atlassian.bandana,com.atlassian.bamboo.security,com.fasterxml.jackson.databind,javax.annotation,javax.net.ssl,javax.xml.bind.annotation,
                            javax.xml.bind.annotation.adapters,javax.xml.datatype,javax.xml.namespace,javax.xml.ws,
                            org.apache.commons.io,org.apache.commons.lang,org.apache.commons.lang3,org.apache.log4j,
                            org.apache.maven.plugin,org.apache.tools.ant,org.apache.tools.zip,org.codehaus.plexus.util
                            ,org.hsqldb.lib,org.slf4j ,org.slf4j.helpers,org.slf4j.spi, javax.activation,javax.imageio,
                            javax.imageio.spi,javax.imageio.stream,javax.jms,javax.jws,javax.mail,javax.mail.internet,
                            javax.management,javax.management.remote, javax.naming,javax.servlet,
                            javax.servlet.http,javax.swing,javax.swing.border,javax.swing.event,javax.swing.table,
                            javax.swing.text,javax.swing.tree,javax.xml.bind, javax.xml.parsers,javax.xml.transform,
                            javax.xml.transform.dom,javax.xml.transform.sax,com.sun.jersey.api.client.*,
                            javax.xml.transform.stream, org.xml.sax.*, com.sun.jersey.multipart.*, com.google.common.collect.*
                        </Import-Package>
                        <Embed-Dependency>*</Embed-Dependency>
                        <!-- Ensure plugin is spring powered -->
                        <Spring-Context>*</Spring-Context>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <properties>
        <bamboo.version>5.14.3</bamboo.version>
        <bamboo.data.version>5.14.3</bamboo.data.version>
        <amps.version>6.2.11</amps.version>
        <jersey.version>1.8</jersey.version>
        <!--      <atlassian.spring.scanner.version>1.2.13</atlassian.spring.scanner.version>-->
        <!-- This key is used to keep the consistency between the key in atlassian-plugin.xml and the key to generate bundle. -->
        <atlassian.plugin.key>${project.groupId}.${project.artifactId}</atlassian.plugin.key>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.atlassian.bamboo</groupId>
            <artifactId>atlassian-bamboo-web</artifactId>
            <version>${bamboo.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.1.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.sal</groupId>
            <artifactId>sal-api</artifactId>
            <version>2.0.17</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.templaterenderer</groupId>
            <artifactId>atlassian-template-renderer-api</artifactId>
            <version>1.1.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.checkmarx.components</groupId>
            <artifactId>zipper</artifactId>
            <version>1.2.1</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
</project>
        <!--
                            <dependency>
                                <groupId>com.checkmarx.components</groupId>
                                <artifactId>zipper</artifactId>
                                <version>1.2.1</version>
                                <scope>compile</scope>
                            </dependency>-->
        <!-- 3rd parties -->
        <!--        <dependency>
                            <groupId>org.glassfish.jersey.core</groupId>
                            <artifactId>jersey-client</artifactId>
                            <version>2.22.2</version>
                        </dependency>
                        <dependency>
                            <groupId>org.glassfish.jersey.media</groupId>
                            <artifactId>jersey-media-json-jackson</artifactId>
                            <version>2.22.2</version>
                        </dependency>-->
        <!--      <dependency>
                          <groupId>junit</groupId>
                          <artifactId>junit</artifactId>
                          <version>4.10</version>
                          <scope>test</scope>
                      </dependency>
              -->
        <!-- WIRED TEST RUNNER DEPENDENCIES -->
        <!--        <dependency>
                            <groupId>com.atlassian.plugins</groupId>
                            <artifactId>atlassian-plugins-osgi-testrunner</artifactId>
                            <version>${plugin.testrunner.version}</version>
                            <scope>test</scope>
                        </dependency>-->
        <!--    <dependency>
                        <groupId>com.atlassian.plugin</groupId>
                        <artifactId>atlassian-spring-scanner-annotation</artifactId>
                        <version>${atlassian.spring.scanner.version}</version>
                        <scope>provided</scope>
                    </dependency>

                    <dependency>
                        <groupId>com.atlassian.plugin</groupId>
                        <artifactId>atlassian-spring-scanner-runtime</artifactId>
                        <version>${atlassian.spring.scanner.version}</version>
                        <scope>provided</scope>
                    </dependency>-->
        <!--<plugin>
                    <groupId>com.atlassian.plugin</groupId>
                    <artifactId>atlassian-spring-scanner-maven-plugin</artifactId>
                    <version>${atlassian.spring.scanner.version}</version>
                    <executions>
                        <execution>
                            <goals>
                   zx             <goal>atlassian-spring-scanner</goal>
                            </goals>
                            <phase>process-classes</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <scannedDependencies>
                            <dependency>
                                <groupId>com.atlassian.plugin</groupId>
                                <artifactId>atlassian-spring-scanner-external-jar</artifactId>
                            </dependency>
                        </scannedDependencies>
                        <verbose>false</verbose>

                    </configuration>
                </plugin>-->
        <!--
                        <dependency>
                            <groupId>com.google.code.gson</groupId>
                            <artifactId>gson</artifactId>
                            <version>2.2.2-atlassian-1</version>
                            <scope>provided</scope>
                        </dependency>
                -->
